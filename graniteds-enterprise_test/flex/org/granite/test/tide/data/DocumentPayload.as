/**
 * Generated by Gas3 v1.1.0 (Granite Data Services) on Sat Jul 26 17:58:20 CEST 2008.
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (Person.as).
 */

package org.granite.test.tide.data {

    import flash.utils.ByteArray;
    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    
    import mx.collections.ListCollectionView;
    
    import org.granite.meta;
    import org.granite.test.tide.AbstractEntity;
    import org.granite.tide.IEntityManager;
    import org.granite.tide.IPropertyHolder;
    import org.granite.util.Enum;

    use namespace meta;

    [Managed]
    [RemoteClass(alias="org.granite.test.tide.DocumentPayload")]
    public class DocumentPayload extends AbstractEntity {

		private var _document:Document;
		private var _payload:ByteArray;
        
        		
        public function set document(value:Document):void {
			_document = value;
        }
        public function get document():Document {
            return _document;
        }
		
		public function set payload(value:ByteArray):void {
			_payload = value;
		}
		public function get payload():ByteArray {
			return _payload;
		}
		

        override meta function merge(em:IEntityManager, obj:*):void {
            var src:DocumentPayload = DocumentPayload(obj);
            super.meta::merge(em, obj);
            if (meta::isInitialized()) {
				em.meta_mergeExternal(src._document, _document, null, this, 'document', function setter(o:*):void{_document = o as Document}) as Document;
				em.meta_mergeExternal(src._payload, _payload, null, this, 'payload', function setter(o:*):void{_payload = o as ByteArray}) as ByteArray;
            }
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            if (meta::isInitialized()) {
				_document = input.readObject() as Document;
				_payload = input.readObject() as ByteArray;
            }
        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            if (meta::isInitialized()) {
				output.writeObject((_document is IPropertyHolder) ? IPropertyHolder(_document).object : _document);
				output.writeObject((_payload is IPropertyHolder) ? IPropertyHolder(_payload).object : _payload);
            }
        }
    }
}
