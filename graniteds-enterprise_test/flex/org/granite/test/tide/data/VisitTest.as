/**
 * Generated by Gas3 v1.1.0 (Granite Data Services) on Sat Jul 26 17:58:20 CEST 2008.
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (Person.as).
 */

package org.granite.test.tide.data {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    
    import mx.collections.ListCollectionView;
    
    import org.granite.meta;
    import org.granite.test.tide.AbstractEntity;
    import org.granite.tide.IEntityManager;
    import org.granite.tide.IPropertyHolder;

    use namespace meta;

    [Managed]
    [RemoteClass(alias="org.granite.test.tide.VisitTest")]
    public class VisitTest extends AbstractEntity {

        private var _name:String;
		private var _patient:Patient3;
		private var _visit:Visit;
		private var _observations:ListCollectionView;
        
        
		public function set name(value:String):void {
			_name = value;
		}
		public function get name():String {
			return _name;
		}
		
		public function set patient(value:Patient3):void {
			_patient = value;
		}
		public function get patient():Patient3 {
			return _patient;			
		}
		
		public function set visit(value:Visit):void {
			_visit = value;
		}
		public function get visit():Visit {
			return _visit;			
		}
		
		public function get observations():ListCollectionView {
			return _observations;
		}
		public function set observations(value:ListCollectionView):void {
			_observations = value;
		}

        override meta function merge(em:IEntityManager, obj:*):void {
            var src:VisitTest = VisitTest(obj);
            super.meta::merge(em, obj);
            if (meta::isInitialized()) {
				em.meta_mergeExternal(src._observations, _observations, null, this, 'observations', function setter(o:*):void{_observations = o as ListCollectionView}) as ListCollectionView;
                em.meta_mergeExternal(src._name, _name, null, this, 'name', function setter(o:*):void{_name = o as String}) as String;
				em.meta_mergeExternal(src._patient, _patient, null, this, 'patient', function setter(o:*):void{_patient = o as Patient3}) as Patient3;
				em.meta_mergeExternal(src._visit, _visit, null, this, 'visit', function setter(o:*):void{_visit = o as Visit}) as Visit;
            }
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            if (meta::isInitialized()) {
				_observations = input.readObject() as ListCollectionView;
                _name = input.readObject() as String;
				_patient = input.readObject() as Patient3;
				_visit = input.readObject() as Visit;
            }
        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            if (meta::isInitialized()) {
				output.writeObject((_observations is IPropertyHolder) ? IPropertyHolder(_observations).object : _observations);
                output.writeObject((_name is IPropertyHolder) ? IPropertyHolder(_name).object : _name);
				output.writeObject((_patient is IPropertyHolder) ? IPropertyHolder(_patient).object : _patient);
				output.writeObject((_visit is IPropertyHolder) ? IPropertyHolder(_visit).object : _visit);
            }
        }
    }
}
