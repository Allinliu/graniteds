<?xml version="1.0" encoding="utf-8"?>
<!--

      GRANITE DATA SERVICES
      Copyright (C) 2006-2015 GRANITE DATA SERVICES S.A.S.

      This file is part of the Granite Data Services Platform.

      Granite Data Services is free software; you can redistribute it and/or
      modify it under the terms of the GNU Lesser General Public
      License as published by the Free Software Foundation; either
      version 2.1 of the License, or (at your option) any later version.

      Granite Data Services is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser
      General Public License for more details.

      You should have received a copy of the GNU Lesser General Public
      License along with this library; if not, write to the Free Software
      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
      USA, or see <http://www.gnu.org/licenses/>.

-->
<!-- Ce fichier est généré automatiquement et n'est pas destiné à être modifié. -->

<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:flexui="flexunit.flexui.*"
			   minWidth="955" minHeight="600" creationComplete="onCreationComplete()">
	<fx:Script>
		<![CDATA[
			import org.granite.test.tide.spring.TestSpringUninitPreprocessor;
			import org.granite.test.tide.spring.TestSpringServerPagedQuery;
			import org.granite.test.tide.spring.TestSpringRetryAfterFault;
			import org.granite.test.tide.spring.TestSpringPagedQueryRefresh;
			import org.granite.test.tide.spring.TestSpringPagedQueryController;
			import org.granite.test.tide.spring.TestSpringMultiServer;
			import org.granite.test.tide.spring.TestSpringFaultValidation;
			import org.granite.test.tide.spring.TestSpringFaultExtendedData;
			import org.granite.test.tide.spring.TestSpringExceptionHandler;
			import org.granite.test.tide.spring.TestSpringComponentRestrict;
			import org.granite.test.tide.spring.TestSpringClientPagedQueryUI;
			import org.granite.test.tide.spring.TestSpringClientPagedQuery;
			import org.granite.test.tide.spring.TestSpringChangeSetEntityRemote9;
			import org.granite.test.tide.spring.TestSpringChangeSetEntityRemote8;
			import org.granite.test.tide.spring.TestSpringChangeSetEntityRemote7;
			import org.granite.test.tide.spring.TestSpringChangeSetEntityRemote6;
			import org.granite.test.tide.spring.TestSpringChangeSetEntityRemote5;
			import org.granite.test.tide.spring.TestSpringChangeSetEntityRemote4;
			import org.granite.test.tide.spring.TestSpringChangeSetEntityRemote3;
			import org.granite.test.tide.spring.TestSpringChangeSetEntityRemote2;
			import org.granite.test.tide.spring.TestSpringChangeSetEntityRemote10;
			import org.granite.test.tide.spring.TestSpringChangeSetEntityRemote;
			import org.granite.test.tide.spring.TestSpringChangePreprocessor;
			import org.granite.test.tide.spring.TestGrailsPagedQuery;
			import org.granite.test.tide.spring.SuiteSpringChangeSet;
			import org.granite.test.tide.spring.SuiteSpring;
			
			public function currentRunTestSuite():Array
			{
				var testsToRun:Array = new Array();
				testsToRun.push(org.granite.test.tide.spring.SuiteSpring);
				testsToRun.push(org.granite.test.tide.spring.SuiteSpringChangeSet);
				testsToRun.push(org.granite.test.tide.spring.TestGrailsPagedQuery);
				testsToRun.push(org.granite.test.tide.spring.TestSpringChangePreprocessor);
				testsToRun.push(org.granite.test.tide.spring.TestSpringChangeSetEntityRemote);
				testsToRun.push(org.granite.test.tide.spring.TestSpringChangeSetEntityRemote10);
				testsToRun.push(org.granite.test.tide.spring.TestSpringChangeSetEntityRemote2);
				testsToRun.push(org.granite.test.tide.spring.TestSpringChangeSetEntityRemote3);
				testsToRun.push(org.granite.test.tide.spring.TestSpringChangeSetEntityRemote4);
				testsToRun.push(org.granite.test.tide.spring.TestSpringChangeSetEntityRemote5);
				testsToRun.push(org.granite.test.tide.spring.TestSpringChangeSetEntityRemote6);
				testsToRun.push(org.granite.test.tide.spring.TestSpringChangeSetEntityRemote7);
				testsToRun.push(org.granite.test.tide.spring.TestSpringChangeSetEntityRemote8);
				testsToRun.push(org.granite.test.tide.spring.TestSpringChangeSetEntityRemote9);
				testsToRun.push(org.granite.test.tide.spring.TestSpringClientPagedQuery);
				testsToRun.push(org.granite.test.tide.spring.TestSpringClientPagedQueryUI);
				testsToRun.push(org.granite.test.tide.spring.TestSpringComponentRestrict);
				testsToRun.push(org.granite.test.tide.spring.TestSpringExceptionHandler);
				testsToRun.push(org.granite.test.tide.spring.TestSpringFaultExtendedData);
				testsToRun.push(org.granite.test.tide.spring.TestSpringFaultValidation);
				testsToRun.push(org.granite.test.tide.spring.TestSpringMultiServer);
				testsToRun.push(org.granite.test.tide.spring.TestSpringPagedQueryController);
				testsToRun.push(org.granite.test.tide.spring.TestSpringPagedQueryRefresh);
				testsToRun.push(org.granite.test.tide.spring.TestSpringRetryAfterFault);
				testsToRun.push(org.granite.test.tide.spring.TestSpringServerPagedQuery);
				testsToRun.push(org.granite.test.tide.spring.TestSpringUninitPreprocessor);
				return testsToRun;
			}
			
			
			private function onCreationComplete():void
			{
				testRunner.runWithFlexUnit4Runner(currentRunTestSuite(), "granite-client-flex45-tests");
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
	</fx:Declarations>
	<flexui:FlexUnitTestRunnerUI id="testRunner" portNumber="8765">
	</flexui:FlexUnitTestRunnerUI>
</s:Application>
