<?xml version="1.0" encoding="UTF-8"?>

<!--
  GRANITE DATA SERVICES
  Copyright (C) 2011 GRANITE DATA SERVICES S.A.S.

  This file is part of Granite Data Services.

  Granite Data Services is free software; you can redistribute it and/or modify
  it under the terms of the GNU Library General Public License as published by
  the Free Software Foundation; either version 2 of the License, or (at your
  option) any later version.

  Granite Data Services is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License
  for more details.

  You should have received a copy of the GNU Library General Public License
  along with this library; if not, see <http://www.gnu.org/licenses/>.
-->

<beans
  	xmlns="http://www.springframework.org/schema/beans"
  	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xmlns:aop="http://www.springframework.org/schema/aop"
  	xmlns:tx="http://www.springframework.org/schema/tx"
  	xsi:schemaLocation="
    	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

  	
  	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    	<property name="driverClassName">
      		<value>org.hsqldb.jdbcDriver</value>
    	</property>
    	<property name="url">
      		<value>jdbc:hsqldb:mem:graniteds-tide-spring</value>
    	</property>
    	<property name="username">
      		<value>sa</value>
    	</property>
    	<property name="password">
      		<value></value>
    	</property>
  	</bean>

  	<bean id="transactionManager"
    	class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory" />
    	<property name="dataSource" ref="dataSource" />
  	</bean>

  	<bean id="sessionFactory"
    	class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    	<property name="dataSource" ref="dataSource" />
    	<property name="hibernateProperties">
	      	<props>
	        	<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
	        	<prop key="hibernate.show_sql">false</prop>
	        	<prop key="hibernate.hbm2ddl.auto">update</prop>
	      	</props>
    	</property>
		<property name="eventListeners">
			<map>
				<entry key="post-insert"><bean class="org.granite.tide.hibernate.HibernateDataPublishListener"/></entry>
				<entry key="post-delete"><bean class="org.granite.tide.hibernate.HibernateDataPublishListener"/></entry>
				<entry key="post-update"><bean class="org.granite.tide.hibernate.HibernateDataPublishListener"/></entry>
				<!-- Listeners that provide correct handling of StateObjectStateException for Hibernate Session API -->
				<entry key="merge"><bean class="org.granite.tide.hibernate.HibernateMergeListener"/></entry>
                <entry key="create"><bean class="org.granite.tide.hibernate.HibernatePersistListener"/></entry>
                <entry key="create-onflush"><bean class="org.granite.tide.hibernate.HibernatePersistOnFlushListener"/></entry>
                <entry key="delete"><bean class="org.granite.tide.hibernate.HibernateDeleteListener"/></entry>
                <entry key="update"><bean class="org.granite.tide.hibernate.HibernateSaveOrUpdateListener"/></entry>
                <entry key="save-update"><bean class="org.granite.tide.hibernate.HibernateSaveOrUpdateListener"/></entry>
                <entry key="save"><bean class="org.granite.tide.hibernate.HibernateSaveOrUpdateListener"/></entry>
                <entry key="lock"><bean class="org.granite.tide.hibernate.HibernateLockListener"/></entry>
                <entry key="flush"><bean class="org.granite.tide.hibernate.HibernateFlushListener"/></entry>
                <entry key="auto-flush"><bean class="org.granite.tide.hibernate.HibernateAutoFlushListener"/></entry>
			</map>
		</property>
		<property name="annotatedClasses">
      		<list>
        		<value>org.granite.example.addressbook.entity.AbstractEntity</value>
        		<value>org.granite.example.addressbook.entity.Address</value>
        		<value>org.granite.example.addressbook.entity.Contact</value>
        		<value>org.granite.example.addressbook.entity.Country</value>
        		<value>org.granite.example.addressbook.entity.Person</value>
      		</list>
     	</property>
  	</bean>
  	
    <tx:annotation-driven transaction-manager="transactionManager"/>
  
</beans>
